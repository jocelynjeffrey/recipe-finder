// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`component tests <App renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="App"
>
    <div
        className="App-header"
    >
        <h1>
            Recipe Finder
        </h1>
    </div>
    <Search
        recipeList={
            Array [
                Object {
                  "image": "https://coffee.com",
                  "label": "coffee",
                  "uri": 1,
                },
                Object {
                  "image": "https://tea.com",
                  "label": "tea",
                  "uri": 2,
                },
              ]
        }
        selectedRecipe={
            Object {
                "calories": 3,
                "image": "https://coffee/com/",
                "ingredients": Array [
                  "coffee",
                  "water",
                ],
                "label": "coffee",
                "uri": 1,
              }
        }
    />
    <div
        className="App-body "
    >
        <ResultsList
            recipeList={
                Array [
                    Object {
                      "image": "https://coffee.com",
                      "label": "coffee",
                      "uri": 1,
                    },
                    Object {
                      "image": "https://tea.com",
                      "label": "tea",
                      "uri": 2,
                    },
                  ]
            }
            selectedRecipe={
                Object {
                    "calories": 3,
                    "image": "https://coffee/com/",
                    "ingredients": Array [
                      "coffee",
                      "water",
                    ],
                    "label": "coffee",
                    "uri": 1,
                  }
            }
        />
        <Details
            recipeList={
                Array [
                    Object {
                      "image": "https://coffee.com",
                      "label": "coffee",
                      "uri": 1,
                    },
                    Object {
                      "image": "https://tea.com",
                      "label": "tea",
                      "uri": 2,
                    },
                  ]
            }
            selectedRecipe={
                Object {
                    "calories": 3,
                    "image": "https://coffee/com/",
                    "ingredients": Array [
                      "coffee",
                      "water",
                    ],
                    "label": "coffee",
                    "uri": 1,
                  }
            }
        />
    </div>
    <Warning
        clientErrorMessage="There has been an error. Please try again later."
        recipeList={
            Array [
                Object {
                  "image": "https://coffee.com",
                  "label": "coffee",
                  "uri": 1,
                },
                Object {
                  "image": "https://tea.com",
                  "label": "tea",
                  "uri": 2,
                },
              ]
        }
        selectedRecipe={
            Object {
                "calories": 3,
                "image": "https://coffee/com/",
                "ingredients": Array [
                  "coffee",
                  "water",
                ],
                "label": "coffee",
                "uri": 1,
              }
        }
    />
</div>,
  "nodes": Array [
    <div
      className="App"
>
      <div
            className="App-header"
      >
            <h1>
                  Recipe Finder
            </h1>
      </div>
      <Search
            recipeList={
                  Array [
                        Object {
                          "image": "https://coffee.com",
                          "label": "coffee",
                          "uri": 1,
                        },
                        Object {
                          "image": "https://tea.com",
                          "label": "tea",
                          "uri": 2,
                        },
                      ]
            }
            selectedRecipe={
                  Object {
                        "calories": 3,
                        "image": "https://coffee/com/",
                        "ingredients": Array [
                          "coffee",
                          "water",
                        ],
                        "label": "coffee",
                        "uri": 1,
                      }
            }
      />
      <div
            className="App-body "
      >
            <ResultsList
                  recipeList={
                        Array [
                              Object {
                                "image": "https://coffee.com",
                                "label": "coffee",
                                "uri": 1,
                              },
                              Object {
                                "image": "https://tea.com",
                                "label": "tea",
                                "uri": 2,
                              },
                            ]
                  }
                  selectedRecipe={
                        Object {
                              "calories": 3,
                              "image": "https://coffee/com/",
                              "ingredients": Array [
                                "coffee",
                                "water",
                              ],
                              "label": "coffee",
                              "uri": 1,
                            }
                  }
            />
            <Details
                  recipeList={
                        Array [
                              Object {
                                "image": "https://coffee.com",
                                "label": "coffee",
                                "uri": 1,
                              },
                              Object {
                                "image": "https://tea.com",
                                "label": "tea",
                                "uri": 2,
                              },
                            ]
                  }
                  selectedRecipe={
                        Object {
                              "calories": 3,
                              "image": "https://coffee/com/",
                              "ingredients": Array [
                                "coffee",
                                "water",
                              ],
                              "label": "coffee",
                              "uri": 1,
                            }
                  }
            />
      </div>
      <Warning
            clientErrorMessage="There has been an error. Please try again later."
            recipeList={
                  Array [
                        Object {
                          "image": "https://coffee.com",
                          "label": "coffee",
                          "uri": 1,
                        },
                        Object {
                          "image": "https://tea.com",
                          "label": "tea",
                          "uri": 2,
                        },
                      ]
            }
            selectedRecipe={
                  Object {
                        "calories": 3,
                        "image": "https://coffee/com/",
                        "ingredients": Array [
                          "coffee",
                          "water",
                        ],
                        "label": "coffee",
                        "uri": 1,
                      }
            }
      />
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Unknown
        recipeList={
                Array [
                        Object {
                          "image": "https://coffee.com",
                          "label": "coffee",
                          "uri": 1,
                        },
                        Object {
                          "image": "https://tea.com",
                          "label": "tea",
                          "uri": 2,
                        },
                      ]
        }
        selectedRecipe={
                Object {
                        "calories": 3,
                        "image": "https://coffee/com/",
                        "ingredients": Array [
                          "coffee",
                          "water",
                        ],
                        "label": "coffee",
                        "uri": 1,
                      }
        }
/>,
      "_debugID": 5,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "recipeList": Array [
            Object {
              "image": "https://coffee.com",
              "label": "coffee",
              "uri": 1,
            },
            Object {
              "image": "https://tea.com",
              "label": "tea",
              "uri": 2,
            },
          ],
          "selectedRecipe": Object {
            "calories": 3,
            "image": "https://coffee/com/",
            "ingredients": Array [
              "coffee",
              "water",
            ],
            "label": "coffee",
            "uri": 1,
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 3,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="App"
>
          <div
                    className="App-header"
          >
                    <h1>
                              Recipe Finder
                    </h1>
          </div>
          <Search
                    recipeList={
                              Array [
                                        Object {
                                          "image": "https://coffee.com",
                                          "label": "coffee",
                                          "uri": 1,
                                        },
                                        Object {
                                          "image": "https://tea.com",
                                          "label": "tea",
                                          "uri": 2,
                                        },
                                      ]
                    }
                    selectedRecipe={
                              Object {
                                        "calories": 3,
                                        "image": "https://coffee/com/",
                                        "ingredients": Array [
                                          "coffee",
                                          "water",
                                        ],
                                        "label": "coffee",
                                        "uri": 1,
                                      }
                    }
          />
          <div
                    className="App-body "
          >
                    <ResultsList
                              recipeList={
                                        Array [
                                                  Object {
                                                    "image": "https://coffee.com",
                                                    "label": "coffee",
                                                    "uri": 1,
                                                  },
                                                  Object {
                                                    "image": "https://tea.com",
                                                    "label": "tea",
                                                    "uri": 2,
                                                  },
                                                ]
                              }
                              selectedRecipe={
                                        Object {
                                                  "calories": 3,
                                                  "image": "https://coffee/com/",
                                                  "ingredients": Array [
                                                    "coffee",
                                                    "water",
                                                  ],
                                                  "label": "coffee",
                                                  "uri": 1,
                                                }
                              }
                    />
                    <Details
                              recipeList={
                                        Array [
                                                  Object {
                                                    "image": "https://coffee.com",
                                                    "label": "coffee",
                                                    "uri": 1,
                                                  },
                                                  Object {
                                                    "image": "https://tea.com",
                                                    "label": "tea",
                                                    "uri": 2,
                                                  },
                                                ]
                              }
                              selectedRecipe={
                                        Object {
                                                  "calories": 3,
                                                  "image": "https://coffee/com/",
                                                  "ingredients": Array [
                                                    "coffee",
                                                    "water",
                                                  ],
                                                  "label": "coffee",
                                                  "uri": 1,
                                                }
                              }
                    />
          </div>
          <Warning
                    clientErrorMessage="There has been an error. Please try again later."
                    recipeList={
                              Array [
                                        Object {
                                          "image": "https://coffee.com",
                                          "label": "coffee",
                                          "uri": 1,
                                        },
                                        Object {
                                          "image": "https://tea.com",
                                          "label": "tea",
                                          "uri": 2,
                                        },
                                      ]
                    }
                    selectedRecipe={
                              Object {
                                        "calories": 3,
                                        "image": "https://coffee/com/",
                                        "ingredients": Array [
                                          "coffee",
                                          "water",
                                        ],
                                        "label": "coffee",
                                        "uri": 1,
                                      }
                    }
          />
</div>,
        "_debugID": 6,
        "_renderedOutput": <div
          className="App"
>
          <div
                    className="App-header"
          >
                    <h1>
                              Recipe Finder
                    </h1>
          </div>
          <Search
                    recipeList={
                              Array [
                                        Object {
                                          "image": "https://coffee.com",
                                          "label": "coffee",
                                          "uri": 1,
                                        },
                                        Object {
                                          "image": "https://tea.com",
                                          "label": "tea",
                                          "uri": 2,
                                        },
                                      ]
                    }
                    selectedRecipe={
                              Object {
                                        "calories": 3,
                                        "image": "https://coffee/com/",
                                        "ingredients": Array [
                                          "coffee",
                                          "water",
                                        ],
                                        "label": "coffee",
                                        "uri": 1,
                                      }
                    }
          />
          <div
                    className="App-body "
          >
                    <ResultsList
                              recipeList={
                                        Array [
                                                  Object {
                                                    "image": "https://coffee.com",
                                                    "label": "coffee",
                                                    "uri": 1,
                                                  },
                                                  Object {
                                                    "image": "https://tea.com",
                                                    "label": "tea",
                                                    "uri": 2,
                                                  },
                                                ]
                              }
                              selectedRecipe={
                                        Object {
                                                  "calories": 3,
                                                  "image": "https://coffee/com/",
                                                  "ingredients": Array [
                                                    "coffee",
                                                    "water",
                                                  ],
                                                  "label": "coffee",
                                                  "uri": 1,
                                                }
                              }
                    />
                    <Details
                              recipeList={
                                        Array [
                                                  Object {
                                                    "image": "https://coffee.com",
                                                    "label": "coffee",
                                                    "uri": 1,
                                                  },
                                                  Object {
                                                    "image": "https://tea.com",
                                                    "label": "tea",
                                                    "uri": 2,
                                                  },
                                                ]
                              }
                              selectedRecipe={
                                        Object {
                                                  "calories": 3,
                                                  "image": "https://coffee/com/",
                                                  "ingredients": Array [
                                                    "coffee",
                                                    "water",
                                                  ],
                                                  "label": "coffee",
                                                  "uri": 1,
                                                }
                              }
                    />
          </div>
          <Warning
                    clientErrorMessage="There has been an error. Please try again later."
                    recipeList={
                              Array [
                                        Object {
                                          "image": "https://coffee.com",
                                          "label": "coffee",
                                          "uri": 1,
                                        },
                                        Object {
                                          "image": "https://tea.com",
                                          "label": "tea",
                                          "uri": 2,
                                        },
                                      ]
                    }
                    selectedRecipe={
                              Object {
                                        "calories": 3,
                                        "image": "https://coffee/com/",
                                        "ingredients": Array [
                                          "coffee",
                                          "water",
                                        ],
                                        "label": "coffee",
                                        "uri": 1,
                                      }
                    }
          />
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Unknown
    recipeList={
        Array [
            Object {
              "image": "https://coffee.com",
              "label": "coffee",
              "uri": 1,
            },
            Object {
              "image": "https://tea.com",
              "label": "tea",
              "uri": 2,
            },
          ]
    }
    selectedRecipe={
        Object {
            "calories": 3,
            "image": "https://coffee/com/",
            "ingredients": Array [
              "coffee",
              "water",
            ],
            "label": "coffee",
            "uri": 1,
          }
    }
/>,
}
`;

exports[`component tests <ResultsList component renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="results-component"
>
    <h2>
        Select a Recipe
    </h2>
    <button
        className="btn"
        onClick={[Function]}
    >
        coffee
    </button>
    <button
        className="btn"
        onClick={[Function]}
    >
        tea
    </button>
    <FavouritesList
        recipeList={
            Array [
                Object {
                  "image": "https://coffee.com",
                  "label": "coffee",
                  "uri": 1,
                },
                Object {
                  "image": "https://tea.com",
                  "label": "tea",
                  "uri": 2,
                },
              ]
        }
        selectedRecipe={
            Object {
                "calories": 3,
                "image": "https://coffee/com/",
                "ingredients": Array [
                  "coffee",
                  "water",
                ],
                "label": "coffee",
                "uri": 1,
              }
        }
    />
</div>,
  "nodes": Array [
    <div
      className="results-component"
>
      <h2>
            Select a Recipe
      </h2>
      <button
            className="btn"
            onClick={[Function]}
      >
            coffee
      </button>
      <button
            className="btn"
            onClick={[Function]}
      >
            tea
      </button>
      <FavouritesList
            recipeList={
                  Array [
                        Object {
                          "image": "https://coffee.com",
                          "label": "coffee",
                          "uri": 1,
                        },
                        Object {
                          "image": "https://tea.com",
                          "label": "tea",
                          "uri": 2,
                        },
                      ]
            }
            selectedRecipe={
                  Object {
                        "calories": 3,
                        "image": "https://coffee/com/",
                        "ingredients": Array [
                          "coffee",
                          "water",
                        ],
                        "label": "coffee",
                        "uri": 1,
                      }
            }
      />
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <ResultsList
        recipeList={
                Array [
                        Object {
                          "image": "https://coffee.com",
                          "label": "coffee",
                          "uri": 1,
                        },
                        Object {
                          "image": "https://tea.com",
                          "label": "tea",
                          "uri": 2,
                        },
                      ]
        }
        selectedRecipe={
                Object {
                        "calories": 3,
                        "image": "https://coffee/com/",
                        "ingredients": Array [
                          "coffee",
                          "water",
                        ],
                        "label": "coffee",
                        "uri": 1,
                      }
        }
/>,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "recipeList": Array [
            Object {
              "image": "https://coffee.com",
              "label": "coffee",
              "uri": 1,
            },
            Object {
              "image": "https://tea.com",
              "label": "tea",
              "uri": 2,
            },
          ],
          "selectedRecipe": Object {
            "calories": 3,
            "image": "https://coffee/com/",
            "ingredients": Array [
              "coffee",
              "water",
            ],
            "label": "coffee",
            "uri": 1,
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="results-component"
>
          <h2>
                    Select a Recipe
          </h2>
          <button
                    className="btn"
                    onClick={[Function]}
          >
                    coffee
          </button>
          <button
                    className="btn"
                    onClick={[Function]}
          >
                    tea
          </button>
          <FavouritesList
                    recipeList={
                              Array [
                                        Object {
                                          "image": "https://coffee.com",
                                          "label": "coffee",
                                          "uri": 1,
                                        },
                                        Object {
                                          "image": "https://tea.com",
                                          "label": "tea",
                                          "uri": 2,
                                        },
                                      ]
                    }
                    selectedRecipe={
                              Object {
                                        "calories": 3,
                                        "image": "https://coffee/com/",
                                        "ingredients": Array [
                                          "coffee",
                                          "water",
                                        ],
                                        "label": "coffee",
                                        "uri": 1,
                                      }
                    }
          />
</div>,
        "_debugID": 4,
        "_renderedOutput": <div
          className="results-component"
>
          <h2>
                    Select a Recipe
          </h2>
          <button
                    className="btn"
                    onClick={[Function]}
          >
                    coffee
          </button>
          <button
                    className="btn"
                    onClick={[Function]}
          >
                    tea
          </button>
          <FavouritesList
                    recipeList={
                              Array [
                                        Object {
                                          "image": "https://coffee.com",
                                          "label": "coffee",
                                          "uri": 1,
                                        },
                                        Object {
                                          "image": "https://tea.com",
                                          "label": "tea",
                                          "uri": 2,
                                        },
                                      ]
                    }
                    selectedRecipe={
                              Object {
                                        "calories": 3,
                                        "image": "https://coffee/com/",
                                        "ingredients": Array [
                                          "coffee",
                                          "water",
                                        ],
                                        "label": "coffee",
                                        "uri": 1,
                                      }
                    }
          />
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ResultsList
    recipeList={
        Array [
            Object {
              "image": "https://coffee.com",
              "label": "coffee",
              "uri": 1,
            },
            Object {
              "image": "https://tea.com",
              "label": "tea",
              "uri": 2,
            },
          ]
    }
    selectedRecipe={
        Object {
            "calories": 3,
            "image": "https://coffee/com/",
            "ingredients": Array [
              "coffee",
              "water",
            ],
            "label": "coffee",
            "uri": 1,
          }
    }
/>,
}
`;

exports[`component tests <Search component renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="search-component"
>
    <div
        className="toggle-tabs"
    >
        <a
            className=" active"
            onClick={[Function]}
        >
            Search by Recipe Name
        </a>
        <a
            className=" "
            onClick={[Function]}
        >
            Search by Calorie Count
        </a>
    </div>
    <div
        className="form"
    >
        <div
            className="search-tab"
        >
            <label
                htmlFor="recipe-name"
            >
                Recipe Name
            </label>
            <input
                onChange={[Function]}
                value={undefined}
            />
        </div>
        <div
            className="calorie-tabs "
        >
            <label>
                Calories per serving
            </label>
            <input
                className="calorie-input "
                onChange={[Function]}
                placeholder="from"
                type="number"
                value={undefined}
            />
            <input
                className="calorie-input "
                onChange={[Function]}
                placeholder="to"
                type="number"
                value={undefined}
            />
        </div>
        <button
            disabled={true}
            onClick={[Function]}
        >
            Search
        </button>
    </div>
</div>,
  "nodes": Array [
    <div
      className="search-component"
>
      <div
            className="toggle-tabs"
      >
            <a
                  className=" active"
                  onClick={[Function]}
            >
                  Search by Recipe Name
            </a>
            <a
                  className=" "
                  onClick={[Function]}
            >
                  Search by Calorie Count
            </a>
      </div>
      <div
            className="form"
      >
            <div
                  className="search-tab"
            >
                  <label
                        htmlFor="recipe-name"
                  >
                        Recipe Name
                  </label>
                  <input
                        onChange={[Function]}
                        value={undefined}
                  />
            </div>
            <div
                  className="calorie-tabs "
            >
                  <label>
                        Calories per serving
                  </label>
                  <input
                        className="calorie-input "
                        onChange={[Function]}
                        placeholder="from"
                        type="number"
                        value={undefined}
                  />
                  <input
                        className="calorie-input "
                        onChange={[Function]}
                        placeholder="to"
                        type="number"
                        value={undefined}
                  />
            </div>
            <button
                  disabled={true}
                  onClick={[Function]}
            >
                  Search
            </button>
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Search />,
      "_debugID": 7,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 4,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="search-component"
>
          <div
                    className="toggle-tabs"
          >
                    <a
                              className=" active"
                              onClick={[Function]}
                    >
                              Search by Recipe Name
                    </a>
                    <a
                              className=" "
                              onClick={[Function]}
                    >
                              Search by Calorie Count
                    </a>
          </div>
          <div
                    className="form"
          >
                    <div
                              className="search-tab"
                    >
                              <label
                                        htmlFor="recipe-name"
                              >
                                        Recipe Name
                              </label>
                              <input
                                        onChange={[Function]}
                                        value={undefined}
                              />
                    </div>
                    <div
                              className="calorie-tabs "
                    >
                              <label>
                                        Calories per serving
                              </label>
                              <input
                                        className="calorie-input "
                                        onChange={[Function]}
                                        placeholder="from"
                                        type="number"
                                        value={undefined}
                              />
                              <input
                                        className="calorie-input "
                                        onChange={[Function]}
                                        placeholder="to"
                                        type="number"
                                        value={undefined}
                              />
                    </div>
                    <button
                              disabled={true}
                              onClick={[Function]}
                    >
                              Search
                    </button>
          </div>
</div>,
        "_debugID": 8,
        "_renderedOutput": <div
          className="search-component"
>
          <div
                    className="toggle-tabs"
          >
                    <a
                              className=" active"
                              onClick={[Function]}
                    >
                              Search by Recipe Name
                    </a>
                    <a
                              className=" "
                              onClick={[Function]}
                    >
                              Search by Calorie Count
                    </a>
          </div>
          <div
                    className="form"
          >
                    <div
                              className="search-tab"
                    >
                              <label
                                        htmlFor="recipe-name"
                              >
                                        Recipe Name
                              </label>
                              <input
                                        onChange={[Function]}
                                        value={undefined}
                              />
                    </div>
                    <div
                              className="calorie-tabs "
                    >
                              <label>
                                        Calories per serving
                              </label>
                              <input
                                        className="calorie-input "
                                        onChange={[Function]}
                                        placeholder="from"
                                        type="number"
                                        value={undefined}
                              />
                              <input
                                        className="calorie-input "
                                        onChange={[Function]}
                                        placeholder="to"
                                        type="number"
                                        value={undefined}
                              />
                    </div>
                    <button
                              disabled={true}
                              onClick={[Function]}
                    >
                              Search
                    </button>
          </div>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Search />,
}
`;

exports[`component tests Details component renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="details-component"
>
    <LikeButton
        recipeList={
            Array [
                Object {
                  "image": "https://coffee.com",
                  "label": "coffee",
                  "uri": 1,
                },
                Object {
                  "image": "https://tea.com",
                  "label": "tea",
                  "uri": 2,
                },
              ]
        }
        selectedRecipe={
            Object {
                "calories": 3,
                "image": "https://coffee/com/",
                "ingredients": Array [
                  "coffee",
                  "water",
                ],
                "label": "coffee",
                "uri": 1,
              }
        }
    />
    <h2>
        coffee
    </h2>
    <img
        src="https://coffee/com/"
    />
    <h3>
        Ingredients
    </h3>
    <ul>
        <li />
        <li />
    </ul>
    <h3>
        Calories per serving
    </h3>
    <span />
    <h3>
        Source
    </h3>
    <span />
    <a
        className="btn"
        href={undefined}
        target="_blank"
    >
        Go to Instructions
    </a>
</div>,
  "nodes": Array [
    <div
      className="details-component"
>
      <LikeButton
            recipeList={
                  Array [
                        Object {
                          "image": "https://coffee.com",
                          "label": "coffee",
                          "uri": 1,
                        },
                        Object {
                          "image": "https://tea.com",
                          "label": "tea",
                          "uri": 2,
                        },
                      ]
            }
            selectedRecipe={
                  Object {
                        "calories": 3,
                        "image": "https://coffee/com/",
                        "ingredients": Array [
                          "coffee",
                          "water",
                        ],
                        "label": "coffee",
                        "uri": 1,
                      }
            }
      />
      <h2>
            coffee
      </h2>
      <img
            src="https://coffee/com/"
      />
      <h3>
            Ingredients
      </h3>
      <ul>
            <li />
            <li />
      </ul>
      <h3>
            Calories per serving
      </h3>
      <span />
      <h3>
            Source
      </h3>
      <span />
      <a
            className="btn"
            href={undefined}
            target="_blank"
      >
            Go to Instructions
      </a>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Details
        recipeList={
                Array [
                        Object {
                          "image": "https://coffee.com",
                          "label": "coffee",
                          "uri": 1,
                        },
                        Object {
                          "image": "https://tea.com",
                          "label": "tea",
                          "uri": 2,
                        },
                      ]
        }
        selectedRecipe={
                Object {
                        "calories": 3,
                        "image": "https://coffee/com/",
                        "ingredients": Array [
                          "coffee",
                          "water",
                        ],
                        "label": "coffee",
                        "uri": 1,
                      }
        }
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "recipeList": Array [
            Object {
              "image": "https://coffee.com",
              "label": "coffee",
              "uri": 1,
            },
            Object {
              "image": "https://tea.com",
              "label": "tea",
              "uri": 2,
            },
          ],
          "selectedRecipe": Object {
            "calories": 3,
            "image": "https://coffee/com/",
            "ingredients": Array [
              "coffee",
              "water",
            ],
            "label": "coffee",
            "uri": 1,
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="details-component"
>
          <LikeButton
                    recipeList={
                              Array [
                                        Object {
                                          "image": "https://coffee.com",
                                          "label": "coffee",
                                          "uri": 1,
                                        },
                                        Object {
                                          "image": "https://tea.com",
                                          "label": "tea",
                                          "uri": 2,
                                        },
                                      ]
                    }
                    selectedRecipe={
                              Object {
                                        "calories": 3,
                                        "image": "https://coffee/com/",
                                        "ingredients": Array [
                                          "coffee",
                                          "water",
                                        ],
                                        "label": "coffee",
                                        "uri": 1,
                                      }
                    }
          />
          <h2>
                    coffee
          </h2>
          <img
                    src="https://coffee/com/"
          />
          <h3>
                    Ingredients
          </h3>
          <ul>
                    <li />
                    <li />
          </ul>
          <h3>
                    Calories per serving
          </h3>
          <span />
          <h3>
                    Source
          </h3>
          <span />
          <a
                    className="btn"
                    href={undefined}
                    target="_blank"
          >
                    Go to Instructions
          </a>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="details-component"
>
          <LikeButton
                    recipeList={
                              Array [
                                        Object {
                                          "image": "https://coffee.com",
                                          "label": "coffee",
                                          "uri": 1,
                                        },
                                        Object {
                                          "image": "https://tea.com",
                                          "label": "tea",
                                          "uri": 2,
                                        },
                                      ]
                    }
                    selectedRecipe={
                              Object {
                                        "calories": 3,
                                        "image": "https://coffee/com/",
                                        "ingredients": Array [
                                          "coffee",
                                          "water",
                                        ],
                                        "label": "coffee",
                                        "uri": 1,
                                      }
                    }
          />
          <h2>
                    coffee
          </h2>
          <img
                    src="https://coffee/com/"
          />
          <h3>
                    Ingredients
          </h3>
          <ul>
                    <li />
                    <li />
          </ul>
          <h3>
                    Calories per serving
          </h3>
          <span />
          <h3>
                    Source
          </h3>
          <span />
          <a
                    className="btn"
                    href={undefined}
                    target="_blank"
          >
                    Go to Instructions
          </a>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Details
    recipeList={
        Array [
            Object {
              "image": "https://coffee.com",
              "label": "coffee",
              "uri": 1,
            },
            Object {
              "image": "https://tea.com",
              "label": "tea",
              "uri": 2,
            },
          ]
    }
    selectedRecipe={
        Object {
            "calories": 3,
            "image": "https://coffee/com/",
            "ingredients": Array [
              "coffee",
              "water",
            ],
            "label": "coffee",
            "uri": 1,
          }
    }
/>,
}
`;
